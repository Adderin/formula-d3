{"version":3,"sources":["components/tree/styled.js","components/tree/index.js","App.js","index.js"],"names":["Container","styled","div","ControlsBlock","GraphWrapper","Tree","useState","dot","svg","setSvg","direction","setDirection","canvas","useRef","makeNode","node","params","color","fill","id","collapsed","label","title","labelType","width","height","shape","style","reDraw","file","digraph","dotConvert","read","inner","select","render","dagreD3","g","graphlib","Graph","directed","compound","multigraph","setGraph","graph","rankdir","ranksep","nodesep","nodes","forEach","el","setNode","undefined","edges","v","w","n","edge","setEdge","arrowheadStyle","successors","length","zoom","d3","on","attr","transform","call","translate","scale","SmilesDrawer","apply","useEffect","current","onClick","window","innerWidth","innerHeight","ref","App","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"03BAEO,IAAMA,EAAYC,IAAOC,IAAV,KASTC,EAAgBF,IAAOC,IAAV,KAWbE,EAAeH,IAAOC,IAAV,K,QCoFVG,EAlGF,WAAO,IAAD,EACHC,mBAAS,4rDAAhBC,EADU,sBAIKD,mBAAS,MAJd,mBAIVE,EAJU,KAILC,EAJK,OAKiBH,mBAAS,MAL1B,mBAKVI,EALU,KAKCC,EALD,KAOXC,EAASC,iBAAO,MAEhBC,EAAW,SAACC,GAAuB,IAAjBC,EAAgB,uDAAP,GACzBC,EAAQD,EAAOE,KAAOF,EAAOE,KAAO,yBAC1C,MAAO,CACLC,GAAIJ,EACJK,WAAW,EACXC,MAAM,uBAAD,OAAyBN,EAAzB,uCACLO,MAAO,UACPC,UAAW,OACXC,MAAO,IACPC,OAAQ,IACRC,MAAO,OACPC,MAAM,mCAAD,OAAqCV,EAArC,0BAKHW,EAAS,SAAAC,GACb,IAAMC,EAAUC,IAAWC,KAAKH,GAC1BI,EAAQzB,EAAI0B,OAAO,KACnBC,EAAS,IAAIC,IAAQD,OAEvBE,EAAI,IAAID,IAAQE,SAASC,MAAM,CACjCC,UAAU,EACVC,UAAU,EACVC,YAAY,IAEdL,EAAEM,SAAS,IAEXN,EAAEO,QAAQC,QAAUnC,EACpB2B,EAAEO,QAAQE,QAAU,GACpBT,EAAEO,QAAQG,QAAU,GAEpBjB,EAAQkB,QAAQC,SAAQ,SAAAC,GACtBb,EAAEc,QAAQD,EAAIpC,EAASoC,OAAIE,EAAW,OAGxCtB,EAAQuB,QAAQJ,SAAQ,YAAe,IAAZK,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EACxBC,EAAI1B,EAAQ2B,KAAKH,EAAGC,GAExBlB,EAAEqB,QAAQJ,EAAGC,EAAG,CACdlC,MAAOmC,EAAEnC,MACTM,MAAO,+CACPgC,eAAgB,iBAIpBtB,EAAEW,QAAQC,SAAQ,SAAAC,GACZb,EAAEuB,WAAWV,GAAIW,OAAS,GAC5BxB,EAAEc,QAAQD,EAAIpC,EAASoC,EAAI,CAAEhC,KAAM,yBAA2B,OAIlE,IAAM4C,EAAOC,SAAUC,GAAG,QAAQ,WAChC/B,EAAMgC,KAAK,YAAaF,QAASG,cAGnC1D,EAAI2D,KAAKL,GACTtD,EAAI2D,KAAKL,EAAKI,UAAWH,eAAgBK,UAAU,EAAG,GAAGC,MAAM,IAC/DlC,EAAOF,EAAOI,GACdiC,IAAaC,MAAM,CAAE/C,MAAO,IAAKC,OAAQ,MACzCjB,EAAI2D,KAAKL,EAAKI,UAAWH,eAAgBK,UAAU,EAAG,GAAGC,MAAM,MAajE,OAVAG,qBAAU,WACR/D,EAAOyB,YAAOtB,EAAO6D,YACpB,IAEHD,qBAAU,WACJjE,GAAOC,GACToB,EAAOrB,KAER,CAACA,EAAKC,EAAKE,EAAWkB,IAGvB,kBAAC5B,EAAD,KACE,kBAACG,EAAD,KACE,4BAAQuE,QAAS,kBAAM/D,GAAa,SAAA6C,GAAC,MAAW,OAANA,EAAa,KAAO,UAA9D,iBAIF,kBAACpD,EAAD,KACE,yBAAKoB,MAAOmD,OAAOC,WAAYnD,OAAQkD,OAAOE,YAAaC,IAAKlE,GAC9D,gCCxFKmE,EARH,WACV,OACE,oCACE,kBAAC,EAAD,QCDAC,EAAcC,SAASC,eAAe,QAC5CC,IAAShD,OACP,kBAAC,IAAMiD,WAAP,KACE,kBAAC,EAAD,OAEFJ,K","file":"static/js/main.3dc624b6.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n  display: block;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nexport const ControlsBlock = styled.div`\r\n  grid-template-columns: 300px 80px 80px 80px 100px;\r\n  display: grid;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n  //position: absolute;\r\n  top: 30px;\r\n  left: 30px;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n`;\r\n\r\nexport const GraphWrapper = styled.div`\r\n  position: relative;\r\n  z-index: 2;\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport SmilesDrawer from \"smiles-drawer\";\r\nimport * as d3 from \"d3\";\r\nimport dagreD3 from \"dagre-d3\";\r\nimport dotConvert from \"graphlib-dot\";\r\nimport { Container, ControlsBlock, GraphWrapper } from \"./styled\";\r\nimport { select } from \"d3-selection\";\r\n\r\nconst Tree = () => {\r\n  const [dot] = useState(\r\n  `digraph {\\n\\tCCC\\n\\t\"c1ccc([SnH](c2ccccc2)c2ccccc2)cc1\"\\n\\tc1ccccc1\\n\\t\"c1ccc(P(c2ccccc2)c2ccccc2)cc1\"\\n\\t\"c1ccc(Oc2ccccc2)cc1\"\\n\\t\"Cl[Sn](c1ccccc1)(c1ccccc1)c1ccccc1\"\\n\\t\"Br[Sn](c1ccccc1)(c1ccccc1)c1ccccc1\"\\n\\t\"[Li][Sn](c1ccccc1)(c1ccccc1)c1ccccc1\"\\n\\t\"[K][Sn](c1ccccc1)(c1ccccc1)c1ccccc1\"\\n\\t\"Cl[Sn](Cl)(Cl)Cl\"\\n\\tCCC -> \"c1ccc([SnH](c2ccccc2)c2ccccc2)cc1\" [label=0.78 rxn=\"c1ccc([SnH](c2ccccc2)c2ccccc2)cc1.CC(C)(C#N)N=NC(C)(C)C#N\"]\\n\\tCCC -> c1ccccc1 [label=0.58 rxn=\"c1ccccc1.CCCI\"]\\n\\t\"c1ccc([SnH](c2ccccc2)c2ccccc2)cc1\" -> \"Cl[Sn](c1ccccc1)(c1ccccc1)c1ccccc1\" [label=0.54 rxn=\"Cl[Sn](c1ccccc1)(c1ccccc1)c1ccccc1\"]\\n\\t\"c1ccc([SnH](c2ccccc2)c2ccccc2)cc1\" -> \"Br[Sn](c1ccccc1)(c1ccccc1)c1ccccc1\" [label=0.58 rxn=\"Br[Sn](c1ccccc1)(c1ccccc1)c1ccccc1\"]\\n\\t\"c1ccc([SnH](c2ccccc2)c2ccccc2)cc1\" -> \"[Li][Sn](c1ccccc1)(c1ccccc1)c1ccccc1\" [label=0.55 rxn=\"[Li][Sn](c1ccccc1)(c1ccccc1)c1ccccc1\"]\\n\\t\"c1ccc([SnH](c2ccccc2)c2ccccc2)cc1\" -> \"[K][Sn](c1ccccc1)(c1ccccc1)c1ccccc1\" [label=0.52 rxn=\"[K][Sn](c1ccccc1)(c1ccccc1)c1ccccc1\"]\\n\\t\"c1ccc([SnH](c2ccccc2)c2ccccc2)cc1\" -> \"Cl[Sn](Cl)(Cl)Cl\" [label=0.64 rxn=\"Br[Mg]c1ccccc1.Cl[Sn](Cl)(Cl)Cl\"]\\n\\tc1ccccc1 -> \"c1ccc(P(c2ccccc2)c2ccccc2)cc1\" [label=0.58 rxn=\"c1ccc(P(c2ccccc2)c2ccccc2)cc1\"]\\n\\tc1ccccc1 -> \"c1ccc(Oc2ccccc2)cc1\" [label=0.66 rxn=\"c1ccc(Oc2ccccc2)cc1.Oc1ccccc1\"]\\n\\t{\\n\\t\\trank=same\\n\\t\\tCCC\\n\\t}\\n\\t{\\n\\t\\trank=same\\n\\t\\t\"c1ccc([SnH](c2ccccc2)c2ccccc2)cc1\"\\n\\t\\tc1ccccc1\\n\\t}\\n\\t{\\n\\t\\trank=same\\n\\t\\t\"c1ccc(P(c2ccccc2)c2ccccc2)cc1\"\\n\\t\\t\"c1ccc(Oc2ccccc2)cc1\"\\n\\t\\t\"Cl[Sn](c1ccccc1)(c1ccccc1)c1ccccc1\"\\n\\t\\t\"Br[Sn](c1ccccc1)(c1ccccc1)c1ccccc1\"\\n\\t\\t\"[Li][Sn](c1ccccc1)(c1ccccc1)c1ccccc1\"\\n\\t\\t\"[K][Sn](c1ccccc1)(c1ccccc1)c1ccccc1\"\\n\\t\\t\"Cl[Sn](Cl)(Cl)Cl\"\\n\\t}\\n}` \r\n    );\r\n  const [svg, setSvg] = useState(null);\r\n  const [direction, setDirection] = useState(\"LR\");\r\n\r\n  const canvas = useRef(null);\r\n\r\n  const makeNode = (node, params = {}) => {\r\n    const color = params.fill ? params.fill : \"rgba(245,245,200 ,0.6)\";\r\n    return {\r\n      id: node,\r\n      collapsed: false,\r\n      label: `<canvas data-smiles=${node} width=\"250\" height=\"100\"></canvas>`,\r\n      title: \"Formula\",\r\n      labelType: \"html\",\r\n      width: 300,\r\n      height: 150,\r\n      shape: \"rect\",\r\n      style: `stroke: rgba(128,0,0,0.8); fill:${color}; stroke-width: 1px;`\r\n    };\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const reDraw = file => {\r\n    const digraph = dotConvert.read(file);\r\n    const inner = svg.select(\"g\");\r\n    const render = new dagreD3.render();\r\n\r\n    let g = new dagreD3.graphlib.Graph({\r\n      directed: true,\r\n      compound: true,\r\n      multigraph: true\r\n    });\r\n    g.setGraph({});\r\n\r\n    g.graph().rankdir = direction;\r\n    g.graph().ranksep = 70;\r\n    g.graph().nodesep = 70;\r\n\r\n    digraph.nodes().forEach(el => {\r\n      g.setNode(el, makeNode(el, undefined, 2));\r\n    });\r\n\r\n    digraph.edges().forEach(({ v, w }) => {\r\n      let n = digraph.edge(v, w);\r\n\r\n      g.setEdge(v, w, {\r\n        label: n.label,\r\n        style: \"stroke: black; fill:none; stroke-width: 3px;\",\r\n        arrowheadStyle: \"fill: red\"\r\n      });\r\n    });\r\n\r\n    g.nodes().forEach(el => {\r\n      if (g.successors(el).length > 0) {\r\n        g.setNode(el, makeNode(el, { fill: \"rgba(107,142,45 ,0.6)\" }, 2));\r\n      }\r\n    });\r\n\r\n    const zoom = d3.zoom().on(\"zoom\", function() {\r\n      inner.attr(\"transform\", d3.event.transform);\r\n    });\r\n\r\n    svg.call(zoom);\r\n    svg.call(zoom.transform, d3.zoomIdentity.translate(0, 0).scale(1));\r\n    render(inner, g);\r\n    SmilesDrawer.apply({ width: 300, height: 150 });\r\n    svg.call(zoom.transform, d3.zoomIdentity.translate(0, 0).scale(0.4));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSvg(select(canvas.current));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (dot && svg) {\r\n      reDraw(dot);\r\n    }\r\n  }, [dot, svg, direction, reDraw]);\r\n\r\n  return (\r\n    <Container>\r\n      <ControlsBlock>\r\n        <button onClick={() => setDirection(n => (n === \"LR\" ? \"TB\" : \"LR\"))}>\r\n          Toggle graph\r\n        </button>\r\n      </ControlsBlock>\r\n      <GraphWrapper>\r\n        <svg width={window.innerWidth} height={window.innerHeight} ref={canvas}>\r\n          <g />\r\n        </svg>\r\n      </GraphWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Tree;","import React from \"react\";\nimport Tree from \"./components/tree\";\n\nconst App = () => {\n  return (\n    <>\n      <Tree />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport App from './App';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);"],"sourceRoot":""}